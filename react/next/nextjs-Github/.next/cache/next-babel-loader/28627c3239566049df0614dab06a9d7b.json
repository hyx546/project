{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar Mycount = /*#__PURE__*/function (_React$Component) {\n  _inherits(Mycount, _React$Component);\n\n  var _super = _createSuper(Mycount);\n\n  function Mycount(props) {\n    var _this;\n\n    _classCallCheck(this, Mycount);\n\n    _this = _super.call(this, props);\n    state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Mycount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"span\", null, this.state.count, \" 111\");\n    }\n  }]);\n\n  return Mycount;\n}(React.Component);\n\nexport default Mycount;","map":{"version":3,"sources":["/Users/xiaokeai/Documents/github/project/react/next/nextjs-Github/pages/b.js"],"names":["React","Mycount","props","state","count","interval","setInterval","setState","clearInterval","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACAC,IAAAA,KAAK,GAAG;AACPC,MAAAA,KAAK,EAAC;AADC,KAAR;AAFgB;AAKlB;;;;wCACmB;AAAA;;AACnB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAC/B,QAAA,MAAI,CAACC,QAAL,CAAc;AACZH,UAAAA,KAAK,EAAE,MAAI,CAACD,KAAL,CAAWC,KAAX,GAAmB;AADd,SAAd;AAGD,OAJyB,EAIvB,IAJuB,CAA3B;AAKA;;;2CAEsB;AACrB,UAAG,KAAKC,QAAR,EAAkB;AAChBG,QAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;AACF;;;6BAES;AACV,aAAO,oBAAO,KAAKF,KAAL,CAAWC,KAAlB,SAAP;AACC;;;;EAvBmBJ,KAAK,CAACS,S;;AA0B5B,eAAeR,OAAf","sourcesContent":["import React from 'react'\n\nclass Mycount extends React.Component{\n  constructor(props) {\n     super(props);\n     state = {\n      count:0\n    }\n  }\n  componentDidMount() {\n   this.interval = setInterval(() => {\n      this.setState({\n        count: this.state.count + 1\n      })\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if(this.interval) {\n      clearInterval(this.interval)\n    }\n  }\n\n  render () {\n  return <span>{this.state.count} 111</span>\n  }\n}\n\nexport default Mycount"]},"metadata":{},"sourceType":"module"}