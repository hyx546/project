{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { Component } from 'react';\nimport { ServerStyleSheet } from 'styled-components'; // HOC\n// function withLog (Comp) {\n//   return (props) => {\n//     console.log(props);\n//     return <Comp {...props}></Comp>\n//   }\n// }\n\nclass myDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, props))\n      });\n\n      const props = await Document.getInitialProps(ctx);\n      return _objectSpread({}, props, {\n        styles: __jsx(React.Fragment, null, props.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    } // const originalRenderPage = ctx.renderPage\n    // ctx.renderPage = () => originalRenderPage ({\n    //   enhanceApp: App => App,\n    //   enhanceComponent: Component => withLog(Component)\n    // })\n\n  }\n\n  render() {\n    return __jsx(Html, null, __jsx(Head, null), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nexport default myDocument;","map":{"version":3,"sources":["/Users/xiaokeai/Documents/github/project/react/next/nextjs-Github/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","Component","ServerStyleSheet","myDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA8BC,IAA9B,EAAoCC,UAApC,QAAqD,eAArD;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAChC,eAAaQ,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AACA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AACxCE,QAAAA,UAAU,EAAEC,GAAG,IAAKC,KAAD,IAAWL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB;AADU,OAAD,CAAzC;;AAGA,YAAMA,KAAK,GAAG,MAAMf,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAApB;AACA,+BACKM,KADL;AAEEE,QAAAA,MAAM,EAAE,4BAAGF,KAAK,CAACE,MAAT,EAAiBP,KAAK,CAACQ,eAAN,EAAjB;AAFV;AAID,KATD,SASS;AACPR,MAAAA,KAAK,CAACS,IAAN;AACD,KAd+B,CAgBhC;AACA;AACA;AACA;AACA;;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD,QACE,MAAC,IAAD,OADF,EAGE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CAHF,CADF;AAUD;;AAlC+B;;AAqClC,eAAgBb,UAAhB","sourcesContent":["import Document, { Html, Head,Main, NextScript} from 'next/document'\nimport { Component } from 'react'\nimport { ServerStyleSheet } from 'styled-components';\n\n\n// HOC\n// function withLog (Comp) {\n//   return (props) => {\n//     console.log(props);\n//     return <Comp {...props}></Comp>\n//   }\n// }\n\nclass myDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet()\n    const originalRenderPage = ctx.renderPage\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => (props) => sheet.collectStyles(<App {...props} /> )\n      })\n      const props = await Document.getInitialProps(ctx)\n      return {\n        ...props,\n        styles: <>{props.styles}{sheet.getStyleElement()}</>\n      }\n    }finally {\n      sheet.seal()\n    }\n\n    // const originalRenderPage = ctx.renderPage\n    // ctx.renderPage = () => originalRenderPage ({\n    //   enhanceApp: App => App,\n    //   enhanceComponent: Component => withLog(Component)\n    // })\n  }\n  render() {\n    return (\n      <Html>\n        <Head>\n        </Head>\n        <body>\n          <Main/>\n          <NextScript/>\n        </body>\n      </Html>\n    )\n  }\n}\n\nexport default  myDocument"]},"metadata":{},"sourceType":"module"}